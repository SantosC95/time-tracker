"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports["default"] = void 0;var _index = _interopRequireDefault(require("../index"));

var _moment = _interopRequireDefault(require("moment"));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { "default": obj };}var Schema = _index["default"].Schema;

var RecordSchema = new Schema({
  task: {
    type: Schema.Types.ObjectId,
    ref: "Task",
    required: true },

  creator: {
    type: Schema.Types.ObjectId,
    ref: "User",
    required: true },

  trackingMode: {
    "enum": {
      values: ["CLOCK", "MANUAL"],
      message: "Invalid tracking mode for task record" },

    type: String,
    required: true },

  start: {
    type: Date,
    required: function required() {
      return this.trackingMode === "CLOCK";
    },
    "default": function _default() {
      if (this.trackingMode === "CLOCK") {
        return (0, _moment["default"])().toDate();
      }
    } },

  end: {
    type: Date },

  time: {
    type: Number,
    required: [
    function () {
      return this.trackingMode === "MANUAL";
    },
    "Please provide a valid time"] } },


{
  timestamps: true,
  toJSON: {
    virtuals: true } });



RecordSchema.virtual('currentTime').get(function () {
  if (!this.end && this.trackingMode === "CLOCK") {
    return (0, _moment["default"])(this.end).diff((0, _moment["default"])(this.start), "seconds");
  }
});

RecordSchema.virtual('active').get(function () {
  if (this.trackingMode === "CLOCK" && !this.end) {
    return true;
  }
  return false;
});

var __Model__ = _index["default"].model('Record', RecordSchema, 'records');var _default2 =
__Model__;exports["default"] = _default2;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tb25nby9tb2RlbHMvcmVjb3Jkcy5qcyJdLCJuYW1lcyI6WyJTY2hlbWEiLCJtb25nb29zZSIsIlJlY29yZFNjaGVtYSIsInRhc2siLCJ0eXBlIiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsInJlcXVpcmVkIiwiY3JlYXRvciIsInRyYWNraW5nTW9kZSIsInZhbHVlcyIsIm1lc3NhZ2UiLCJTdHJpbmciLCJzdGFydCIsIkRhdGUiLCJ0b0RhdGUiLCJlbmQiLCJ0aW1lIiwiTnVtYmVyIiwidGltZXN0YW1wcyIsInRvSlNPTiIsInZpcnR1YWxzIiwidmlydHVhbCIsImdldCIsImRpZmYiLCJfX01vZGVsX18iLCJtb2RlbCJdLCJtYXBwaW5ncyI6InVHQUFBOztBQUVBLHdELCtGQURBLElBQU1BLE1BQU0sR0FBR0Msa0JBQVNELE1BQXhCOztBQUdBLElBQUlFLFlBQVksR0FBRyxJQUFJRixNQUFKLENBQVc7QUFDMUJHLEVBQUFBLElBQUksRUFBRTtBQUNGQyxJQUFBQSxJQUFJLEVBQUVKLE1BQU0sQ0FBQ0ssS0FBUCxDQUFhQyxRQURqQjtBQUVGQyxJQUFBQSxHQUFHLEVBQUUsTUFGSDtBQUdGQyxJQUFBQSxRQUFRLEVBQUUsSUFIUixFQURvQjs7QUFNMUJDLEVBQUFBLE9BQU8sRUFBRTtBQUNMTCxJQUFBQSxJQUFJLEVBQUVKLE1BQU0sQ0FBQ0ssS0FBUCxDQUFhQyxRQURkO0FBRUxDLElBQUFBLEdBQUcsRUFBRSxNQUZBO0FBR0xDLElBQUFBLFFBQVEsRUFBRSxJQUhMLEVBTmlCOztBQVcxQkUsRUFBQUEsWUFBWSxFQUFFO0FBQ1YsWUFBTTtBQUNGQyxNQUFBQSxNQUFNLEVBQUUsQ0FBRSxPQUFGLEVBQVcsUUFBWCxDQUROO0FBRUZDLE1BQUFBLE9BQU8sRUFBRSx1Q0FGUCxFQURJOztBQUtWUixJQUFBQSxJQUFJLEVBQUVTLE1BTEk7QUFNVkwsSUFBQUEsUUFBUSxFQUFFLElBTkEsRUFYWTs7QUFtQjFCTSxFQUFBQSxLQUFLLEVBQUU7QUFDSFYsSUFBQUEsSUFBSSxFQUFFVyxJQURIO0FBRUhQLElBQUFBLFFBQVEsRUFBRSxvQkFBWTtBQUNsQixhQUFPLEtBQUtFLFlBQUwsS0FBc0IsT0FBN0I7QUFDSCxLQUpFO0FBS0gsZUFBUyxvQkFBWTtBQUNqQixVQUFJLEtBQUtBLFlBQUwsS0FBc0IsT0FBMUIsRUFBbUM7QUFDL0IsZUFBTywwQkFBU00sTUFBVCxFQUFQO0FBQ0g7QUFDSixLQVRFLEVBbkJtQjs7QUE4QjFCQyxFQUFBQSxHQUFHLEVBQUU7QUFDRGIsSUFBQUEsSUFBSSxFQUFFVyxJQURMLEVBOUJxQjs7QUFpQzFCRyxFQUFBQSxJQUFJLEVBQUU7QUFDRmQsSUFBQUEsSUFBSSxFQUFFZSxNQURKO0FBRUZYLElBQUFBLFFBQVEsRUFBRTtBQUNOLGdCQUFZO0FBQ1IsYUFBTyxLQUFLRSxZQUFMLEtBQXNCLFFBQTdCO0FBQ0gsS0FISztBQUlOLGlDQUpNLENBRlIsRUFqQ29CLEVBQVg7OztBQTBDaEI7QUFDQ1UsRUFBQUEsVUFBVSxFQUFFLElBRGI7QUFFQ0MsRUFBQUEsTUFBTSxFQUFFO0FBQ0pDLElBQUFBLFFBQVEsRUFBRSxJQUROLEVBRlQsRUExQ2dCLENBQW5COzs7O0FBaURBcEIsWUFBWSxDQUFDcUIsT0FBYixDQUFxQixhQUFyQixFQUFvQ0MsR0FBcEMsQ0FBd0MsWUFBWTtBQUNoRCxNQUFJLENBQUMsS0FBS1AsR0FBTixJQUFhLEtBQUtQLFlBQUwsS0FBc0IsT0FBdkMsRUFBZ0Q7QUFDNUMsV0FBTyx3QkFBTyxLQUFLTyxHQUFaLEVBQWlCUSxJQUFqQixDQUFzQix3QkFBTyxLQUFLWCxLQUFaLENBQXRCLEVBQTBDLFNBQTFDLENBQVA7QUFDSDtBQUNKLENBSkQ7O0FBTUFaLFlBQVksQ0FBQ3FCLE9BQWIsQ0FBcUIsUUFBckIsRUFBK0JDLEdBQS9CLENBQW1DLFlBQVk7QUFDM0MsTUFBSSxLQUFLZCxZQUFMLEtBQXNCLE9BQXRCLElBQWlDLENBQUMsS0FBS08sR0FBM0MsRUFBZ0Q7QUFDNUMsV0FBTyxJQUFQO0FBQ0g7QUFDRCxTQUFPLEtBQVA7QUFDSCxDQUxEOztBQU9BLElBQU1TLFNBQVMsR0FBR3pCLGtCQUFTMEIsS0FBVCxDQUFlLFFBQWYsRUFBeUJ6QixZQUF6QixFQUF1QyxTQUF2QyxDQUFsQixDO0FBQ2V3QixTIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gXCIuLi9pbmRleFwiXG5jb25zdCBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWFcbmltcG9ydCBtb21lbnQgZnJvbSBcIm1vbWVudFwiXG5cbmxldCBSZWNvcmRTY2hlbWEgPSBuZXcgU2NoZW1hKHtcbiAgICB0YXNrOiB7XG4gICAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVmOiBcIlRhc2tcIixcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICB9LFxuICAgIGNyZWF0b3I6IHtcbiAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICByZWY6IFwiVXNlclwiLFxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxuICAgIH0sXG4gICAgdHJhY2tpbmdNb2RlOiB7XG4gICAgICAgIGVudW06IHtcbiAgICAgICAgICAgIHZhbHVlczogWyBcIkNMT0NLXCIsIFwiTUFOVUFMXCIgXSxcbiAgICAgICAgICAgIG1lc3NhZ2U6IFwiSW52YWxpZCB0cmFja2luZyBtb2RlIGZvciB0YXNrIHJlY29yZFwiXG4gICAgICAgIH0sXG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICB9LFxuICAgIHN0YXJ0OiB7XG4gICAgICAgIHR5cGU6IERhdGUsXG4gICAgICAgIHJlcXVpcmVkOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy50cmFja2luZ01vZGUgPT09IFwiQ0xPQ0tcIlxuICAgICAgICB9LFxuICAgICAgICBkZWZhdWx0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy50cmFja2luZ01vZGUgPT09IFwiQ0xPQ0tcIikge1xuICAgICAgICAgICAgICAgIHJldHVybiBtb21lbnQoKS50b0RhdGUoKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSxcbiAgICBlbmQ6IHtcbiAgICAgICAgdHlwZTogRGF0ZVxuICAgIH0sXG4gICAgdGltZToge1xuICAgICAgICB0eXBlOiBOdW1iZXIsXG4gICAgICAgIHJlcXVpcmVkOiBbXG4gICAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMudHJhY2tpbmdNb2RlID09PSBcIk1BTlVBTFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJQbGVhc2UgcHJvdmlkZSBhIHZhbGlkIHRpbWVcIlxuICAgICAgICBdXG4gICAgfVxufSwge1xuICAgIHRpbWVzdGFtcHM6IHRydWUsXG4gICAgdG9KU09OOiB7XG4gICAgICAgIHZpcnR1YWxzOiB0cnVlXG4gICAgfVxufSlcblxuUmVjb3JkU2NoZW1hLnZpcnR1YWwoJ2N1cnJlbnRUaW1lJykuZ2V0KGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoIXRoaXMuZW5kICYmIHRoaXMudHJhY2tpbmdNb2RlID09PSBcIkNMT0NLXCIpIHtcbiAgICAgICAgcmV0dXJuIG1vbWVudCh0aGlzLmVuZCkuZGlmZihtb21lbnQodGhpcy5zdGFydCksIFwic2Vjb25kc1wiKVxuICAgIH1cbn0pO1xuXG5SZWNvcmRTY2hlbWEudmlydHVhbCgnYWN0aXZlJykuZ2V0KGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodGhpcy50cmFja2luZ01vZGUgPT09IFwiQ0xPQ0tcIiAmJiAhdGhpcy5lbmQpIHtcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlXG59KTtcblxuY29uc3QgX19Nb2RlbF9fID0gbW9uZ29vc2UubW9kZWwoJ1JlY29yZCcsIFJlY29yZFNjaGVtYSwgJ3JlY29yZHMnKTsgXG5leHBvcnQgZGVmYXVsdCBfX01vZGVsX18iXX0=