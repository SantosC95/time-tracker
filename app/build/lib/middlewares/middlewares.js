"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.setSorting = exports.parsePagination = exports.bruteForceShield = void 0;var _redisConfig = require("../../config/redis-config");function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {try {var info = gen[key](arg);var value = info.value;} catch (error) {reject(error);return;}if (info.done) {resolve(value);} else {Promise.resolve(value).then(_next, _throw);}}function _asyncToGenerator(fn) {return function () {var self = this,args = arguments;return new Promise(function (resolve, reject) {var gen = fn.apply(self, args);function _next(value) {asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);}function _throw(err) {asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);}_next(undefined);});};}function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError("Invalid attempt to destructure non-iterable instance");}function _iterableToArrayLimit(arr, i) {var _arr = [];var _n = true;var _d = false;var _e = undefined;try {for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i["return"] != null) _i["return"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(source, true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(source).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}

/**
et sorting parameters

var setSorting = function setSorting(req, res, next) {var _req$query = _objectSpread({},
  req.query),sortBy = _req$query.sortBy;

  if (sortBy) {
    var sortObj = {};
    sortBy.split('|').
    map(function (param) {var _param$split$map =
      param.split('@').map(function (p) {return p.trim();}),_param$split$map2 = _slicedToArray(_param$split$map, 2),field = _param$split$map2[0],wise = _param$split$map2[1];
      return { field: field, wise: wise };
    }).
    forEach(function (param) {
      var obj = {};
      var wise = null;
      switch (param.wise) {
        case "asc":wise = 1;break;
        case "desc":wise = -1;break;
        default:wise = 1;break;}

      obj["".concat(param.field)] = wise;
      sortObj = _objectSpread({}, sortObj, {}, obj);
    });
    req.sortBy = sortObj;
  } else {
    req.sortBy = null;
  }
  return next();
};

/**
    * Set pagination parameters
    */exports.setSorting = setSorting;
var parsePagination = function parsePagination(req, res, next) {
  var from = null;
  var size = null;
  var query_params = _objectSpread({}, req.query);
  if (query_params.page && query_params.elementsperpage) {var
    page = query_params.page,elementsperpage = query_params.elementsperpage;
    page = page | 0;
    if (page === 0)
    page = 1;
    elementsperpage = elementsperpage | 0;
    size = elementsperpage;
    from = (page - 1) * size;
  }
  req.pagination = { from: from, size: size };
  return next();
};

/** DDoS/Brute force attacks */exports.parsePagination = parsePagination;
var bruteForceShield = /*#__PURE__*/function () {var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res, next) {return regeneratorRuntime.wrap(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:_context.prev = 0;_context.next = 3;return (

              _redisConfig.rateLimiter.consume(req.ip));case 3:return _context.abrupt("return",
            next());case 6:_context.prev = 6;_context.t0 = _context["catch"](0);

            res.status(429).json({
              error: true,
              messageCode: "TOO_MANY_REQUESTS" });case 9:case "end":return _context.stop();}}}, _callee, null, [[0, 6]]);}));return function bruteForceShield(_x, _x2, _x3) {return _ref.apply(this, arguments);};}();exports.bruteForceShield = bruteForceShield;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvbWlkZGxld2FyZXMvbWlkZGxld2FyZXMuanMiXSwibmFtZXMiOlsic2V0U29ydGluZyIsInJlcSIsInJlcyIsIm5leHQiLCJxdWVyeSIsInNvcnRCeSIsInNvcnRPYmoiLCJzcGxpdCIsIm1hcCIsInBhcmFtIiwicCIsInRyaW0iLCJmaWVsZCIsIndpc2UiLCJmb3JFYWNoIiwib2JqIiwicGFyc2VQYWdpbmF0aW9uIiwiZnJvbSIsInNpemUiLCJxdWVyeV9wYXJhbXMiLCJwYWdlIiwiZWxlbWVudHNwZXJwYWdlIiwicGFnaW5hdGlvbiIsImJydXRlRm9yY2VTaGllbGQiLCJyYXRlTGltaXRlciIsImNvbnN1bWUiLCJpcCIsInN0YXR1cyIsImpzb24iLCJlcnJvciIsIm1lc3NhZ2VDb2RlIl0sIm1hcHBpbmdzIjoiNEpBQUEsd0Q7O0FBRUE7OztBQUdBLElBQU1BLFVBQVUsR0FBRyxTQUFiQSxVQUFhLENBQUVDLEdBQUYsRUFBT0MsR0FBUCxFQUFZQyxJQUFaLEVBQXNCO0FBQ2RGLEVBQUFBLEdBQUcsQ0FBQ0csS0FEVSxFQUM3QkMsTUFENkIsY0FDN0JBLE1BRDZCOztBQUdyQyxNQUFJQSxNQUFKLEVBQVk7QUFDUixRQUFJQyxPQUFPLEdBQUcsRUFBZDtBQUNBRCxJQUFBQSxNQUFNLENBQUNFLEtBQVAsQ0FBYSxHQUFiO0FBQ0tDLElBQUFBLEdBREwsQ0FDUyxVQUFBQyxLQUFLLEVBQUk7QUFDY0EsTUFBQUEsS0FBSyxDQUFDRixLQUFOLENBQVksR0FBWixFQUFpQkMsR0FBakIsQ0FBcUIsVUFBQUUsQ0FBQyxVQUFJQSxDQUFDLENBQUNDLElBQUYsRUFBSixFQUF0QixDQURkLHlEQUNGQyxLQURFLHdCQUNLQyxJQURMO0FBRVYsYUFBTyxFQUFFRCxLQUFLLEVBQUxBLEtBQUYsRUFBU0MsSUFBSSxFQUFKQSxJQUFULEVBQVA7QUFDSCxLQUpMO0FBS0tDLElBQUFBLE9BTEwsQ0FLYSxVQUFFTCxLQUFGLEVBQWE7QUFDbEIsVUFBSU0sR0FBRyxHQUFHLEVBQVY7QUFDQSxVQUFJRixJQUFJLEdBQUcsSUFBWDtBQUNBLGNBQVFKLEtBQUssQ0FBQ0ksSUFBZDtBQUNJLGFBQUssS0FBTCxDQUFZQSxJQUFJLEdBQUcsQ0FBUCxDQUFVO0FBQ3RCLGFBQUssTUFBTCxDQUFhQSxJQUFJLEdBQUcsQ0FBQyxDQUFSLENBQVc7QUFDeEIsZ0JBQVNBLElBQUksR0FBRyxDQUFQLENBQVUsTUFIdkI7O0FBS0FFLE1BQUFBLEdBQUcsV0FBSU4sS0FBSyxDQUFDRyxLQUFWLEVBQUgsR0FBd0JDLElBQXhCO0FBQ0FQLE1BQUFBLE9BQU8scUJBQU9BLE9BQVAsTUFBbUJTLEdBQW5CLENBQVA7QUFDSCxLQWZMO0FBZ0JBZCxJQUFBQSxHQUFHLENBQUNJLE1BQUosR0FBYUMsT0FBYjtBQUNILEdBbkJELE1BbUJPO0FBQ0hMLElBQUFBLEdBQUcsQ0FBQ0ksTUFBSixHQUFhLElBQWI7QUFDSDtBQUNELFNBQU9GLElBQUksRUFBWDtBQUNILENBMUJEOztBQTRCQTs7O0FBR0EsSUFBTWEsZUFBZSxHQUFHLFNBQWxCQSxlQUFrQixDQUFFZixHQUFGLEVBQU9DLEdBQVAsRUFBWUMsSUFBWixFQUFzQjtBQUMxQyxNQUFJYyxJQUFJLEdBQUcsSUFBWDtBQUNBLE1BQUlDLElBQUksR0FBRyxJQUFYO0FBQ0EsTUFBTUMsWUFBWSxxQkFBT2xCLEdBQUcsQ0FBQ0csS0FBWCxDQUFsQjtBQUNBLE1BQUllLFlBQVksQ0FBQ0MsSUFBYixJQUFxQkQsWUFBWSxDQUFDRSxlQUF0QyxFQUF1RDtBQUM3Q0QsSUFBQUEsSUFENkMsR0FDbkJELFlBRG1CLENBQzdDQyxJQUQ2QyxDQUN2Q0MsZUFEdUMsR0FDbkJGLFlBRG1CLENBQ3ZDRSxlQUR1QztBQUVuREQsSUFBQUEsSUFBSSxHQUFHQSxJQUFJLEdBQUMsQ0FBWjtBQUNBLFFBQUlBLElBQUksS0FBSyxDQUFiO0FBQ0lBLElBQUFBLElBQUksR0FBRyxDQUFQO0FBQ0pDLElBQUFBLGVBQWUsR0FBR0EsZUFBZSxHQUFDLENBQWxDO0FBQ0FILElBQUFBLElBQUksR0FBR0csZUFBUDtBQUNBSixJQUFBQSxJQUFJLEdBQUcsQ0FBQ0csSUFBSSxHQUFHLENBQVIsSUFBV0YsSUFBbEI7QUFDSDtBQUNEakIsRUFBQUEsR0FBRyxDQUFDcUIsVUFBSixHQUFpQixFQUFFTCxJQUFJLEVBQUpBLElBQUYsRUFBUUMsSUFBSSxFQUFKQSxJQUFSLEVBQWpCO0FBQ0EsU0FBT2YsSUFBSSxFQUFYO0FBQ0gsQ0FmRDs7QUFpQkEsK0I7QUFDQSxJQUFNb0IsZ0JBQWdCLGdHQUFHLGlCQUFRdEIsR0FBUixFQUFhQyxHQUFiLEVBQWtCQyxJQUFsQjs7QUFFWHFCLHVDQUFZQyxPQUFaLENBQW9CeEIsR0FBRyxDQUFDeUIsRUFBeEIsQ0FGVztBQUdWdkIsWUFBQUEsSUFBSSxFQUhNOztBQUtqQkQsWUFBQUEsR0FBRyxDQUFDeUIsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ2pCQyxjQUFBQSxLQUFLLEVBQUUsSUFEVTtBQUVqQkMsY0FBQUEsV0FBVyxFQUFFLG1CQUZJLEVBQXJCLEVBTGlCLHdFQUFILG1CQUFoQlAsZ0JBQWdCLHdEQUF0QixDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmF0ZUxpbWl0ZXIgfSBmcm9tIFwiLi4vLi4vY29uZmlnL3JlZGlzLWNvbmZpZ1wiXG5cbi8qKlxuICogU2V0IHNvcnRpbmcgcGFyYW1ldGVyc1xuICovXG5jb25zdCBzZXRTb3J0aW5nID0gKCByZXEsIHJlcywgbmV4dCApID0+IHtcbiAgICBjb25zdCB7IHNvcnRCeSB9ID0gey4uLnJlcS5xdWVyeX07XG5cbiAgICBpZiAoc29ydEJ5KSB7XG4gICAgICAgIGxldCBzb3J0T2JqID0ge307XG4gICAgICAgIHNvcnRCeS5zcGxpdCgnfCcpXG4gICAgICAgICAgICAubWFwKHBhcmFtID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBbIGZpZWxkLCB3aXNlIF0gPSBwYXJhbS5zcGxpdCgnQCcpLm1hcChwID0+IHAudHJpbSgpKTtcbiAgICAgICAgICAgICAgICByZXR1cm4geyBmaWVsZCwgd2lzZSB9XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmZvckVhY2goKCBwYXJhbSApID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgb2JqID0ge307XG4gICAgICAgICAgICAgICAgbGV0IHdpc2UgPSBudWxsO1xuICAgICAgICAgICAgICAgIHN3aXRjaCAocGFyYW0ud2lzZSkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIFwiYXNjXCI6IHdpc2UgPSAxOyBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcImRlc2NcIjogd2lzZSA9IC0xOyBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDogd2lzZSA9IDE7IGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBvYmpbYCR7cGFyYW0uZmllbGR9YF0gPSB3aXNlO1xuICAgICAgICAgICAgICAgIHNvcnRPYmogPSB7Li4uc29ydE9iaiwgLi4ub2JqfTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgIHJlcS5zb3J0QnkgPSBzb3J0T2JqO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJlcS5zb3J0QnkgPSBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gbmV4dCgpO1xufVxuXG4vKipcbiAqIFNldCBwYWdpbmF0aW9uIHBhcmFtZXRlcnNcbiAqL1xuY29uc3QgcGFyc2VQYWdpbmF0aW9uID0gKCByZXEsIHJlcywgbmV4dCApID0+IHtcbiAgICBsZXQgZnJvbSA9IG51bGw7IFxuICAgIGxldCBzaXplID0gbnVsbDtcbiAgICBjb25zdCBxdWVyeV9wYXJhbXMgPSB7Li4ucmVxLnF1ZXJ5fTtcbiAgICBpZiAocXVlcnlfcGFyYW1zLnBhZ2UgJiYgcXVlcnlfcGFyYW1zLmVsZW1lbnRzcGVycGFnZSkge1xuICAgICAgICBsZXQgeyBwYWdlLCBlbGVtZW50c3BlcnBhZ2UgfSA9IHF1ZXJ5X3BhcmFtcztcbiAgICAgICAgcGFnZSA9IHBhZ2V8MDtcbiAgICAgICAgaWYgKHBhZ2UgPT09IDApXG4gICAgICAgICAgICBwYWdlID0gMVxuICAgICAgICBlbGVtZW50c3BlcnBhZ2UgPSBlbGVtZW50c3BlcnBhZ2V8MDtcbiAgICAgICAgc2l6ZSA9IGVsZW1lbnRzcGVycGFnZTtcbiAgICAgICAgZnJvbSA9IChwYWdlIC0gMSkqc2l6ZTtcbiAgICB9XG4gICAgcmVxLnBhZ2luYXRpb24gPSB7IGZyb20sIHNpemUgfVxuICAgIHJldHVybiBuZXh0KClcbn1cblxuLyoqIEREb1MvQnJ1dGUgZm9yY2UgYXR0YWNrcyAqL1xuY29uc3QgYnJ1dGVGb3JjZVNoaWVsZCA9IGFzeW5jICggcmVxLCByZXMsIG5leHQgKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgYXdhaXQgcmF0ZUxpbWl0ZXIuY29uc3VtZShyZXEuaXApXG4gICAgICAgIHJldHVybiBuZXh0KClcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICByZXMuc3RhdHVzKDQyOSkuanNvbih7XG4gICAgICAgICAgICBlcnJvcjogdHJ1ZSxcbiAgICAgICAgICAgIG1lc3NhZ2VDb2RlOiBcIlRPT19NQU5ZX1JFUVVFU1RTXCJcbiAgICAgICAgfSk7ICAgXG4gICAgfVxufVxuXG5leHBvcnQge1xuICAgIGJydXRlRm9yY2VTaGllbGQsXG4gICAgcGFyc2VQYWdpbmF0aW9uLFxuICAgIHNldFNvcnRpbmdcbn0iXX0=